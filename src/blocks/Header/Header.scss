@import '../../../styles/mixins.scss';
@import '../../../styles/variables.scss';

$block: '.#{$ns}header-block';
$backgroundWidth: 1440px;

#{$block} {
    position: relative;

    &_full-width {
        --pc-border-radius: 0;

        padding: $indentXS 0;
        margin: 0 0 $indentXS;
    }

    &__content-wrapper {
        margin: 0 $indentXXXS;
        height: 100%;
    }

    &__content {
        position: relative;
        height: 100%;

        &_theme_dark {
            #{$block}__title,
            #{$block}__description .yfm,
            #{$block}__description .yfm * {
                color: var(--yc-color-text-light-primary);
            }
        }

        &_vertical-offset {
            margin: $indentXS 0;

            &_s {
                padding: $indentXL 0;
            }

            &_m {
                padding: $indentXXL 0;
            }

            &_l {
                padding: $indentXXXL 0;
            }

            &_xl {
                padding: $indent4XL 0;
            }
        }

        // deprecated
        // TODO: delete after the possibility to remove padding-bottom in the block
        &_offset_large {
            padding: calc(#{$indentXXXL} - #{$indentXS}) 0 $indentXS;
        }

        &-outer,
        &-inner {
            position: relative;
            z-index: 10;
        }
    }

    &__title {
        @include heading1();

        position: relative;

        a {
            @include link();
        }
    }

    &__description {
        margin-top: $indentXS;

        .yfm,
        .yfm * {
            @include text-size(body-3);
            color: var(--yc-color-text-primary);
        }
    }

    &__buttons {
        margin-top: $indentXS;
    }

    &__button {
        @include add-specificity(&) {
            margin-top: $indentXS;
            margin-right: $indentXS;
        }
    }

    &__media {
        position: absolute;
        display: none;
        top: $indentXS;
        right: 0;
        width: 50%;
        height: calc(100% - 2 * #{$indentXS});
        overflow: hidden;
        object-fit: cover;

        border-radius: $borderRadius;

        &_s {
            width: 32%;
        }
    }

    &__video {
        height: 100%;

        > video {
            border-radius: $borderRadius;
            width: 100%;
            height: auto;
        }
    }

    &__image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: $borderRadius;
    }

    &__breadcrumbs {
        position: absolute;
        top: $indentXS;
        z-index: 11;
    }

    &__background-media {
        height: 100%;

        > div {
            height: 100%;
            width: 100%;
        }

        > div:not(#{$block}__video) {
            position: absolute;
        }
    }

    &__background,
    &__background#{$block}__background_media {
        position: absolute;
        top: 0;
        overflow: hidden;
        z-index: 5;
        width: $backgroundWidth;
        max-width: 100%;
        left: 50%;
        transform: translateX(-50%);
        height: 100%;
        border-radius: $borderRadius;

        &#{$block}__background_full-width-media {
            width: 100%;

            & > div {
                max-width: none;
            }

            video {
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }

    &__background_full-width {
        left: 0;
        transform: none;
        max-width: none;
        width: 100%;
        background-color: var(--yc-color-base-background);
    }

    &__overtitle {
        @include text-size(body-3);

        margin-bottom: $indentXXXS;

        a {
            @include link();
        }
    }

    @media (max-width: $backgroundWidth) {
        &__background,
        &__background#{$block}__background_media {
            left: 0;
            transform: none;
        }
    }

    @media (max-width: map-get($gridBreakpoints, 'md')) {
        &_has-media {
            #{$block}__content {
                padding-top: $indentL;
            }
        }

        //rewrite grid's styles .Grid .col
        #{$block}__content_vertical-offset {
            &_s,
            &_m,
            &_l,
            &_xl {
                padding: calc(#{$indentXXL} - #{$indentXS}) 0;
            }
        }

        #{$block}__content_offset_large {
            padding: calc(#{$indentXXL} - #{$indentXS}) 0 $indentXS;
            margin-bottom: -$indentM;
        }
    }

    @media (min-width: map-get($gridBreakpoints, 'md')) {
        &__media {
            display: block;
        }

        &_has-media {
            #{$block}__content-inner {
                padding-right: $indentL;
            }
        }
    }
}
